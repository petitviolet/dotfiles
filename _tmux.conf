# <prefix> + I to install
set -g @tpm_plugins '                  \
  tmux-plugins/tpm                     \
  tmux-plugins/tmux-yank               \
  tmux-plugins/tmux-open               \
  tmux-plugins/tmux-resurrect          \
  tmux-plugins/tmux-continuum          \
  tmux-plugins/tmux-battery            \
  tmux-plugins/tmux-pain-control       \
  tmux-plugins/tmux-online-status      \
  soyuka/tmux-current-pane-hostname    \
  knakayama/tmux-newline-detector      \
'

# continuum
set -g @continuum-restore 'on'
set -g @continuum-save-interval '20' # 20minごとに保存
set -g @continuum-boot 'on'

# resurrect
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'mysql ssh php'

run-shell '~/.tmux/plugins/tpm/tpm'
#==============================
# copyモード
#==============================
# copyモード
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# zshでpbcopy
# bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"
# set-option -g default-command "tmux rename-window zsh; reattach-to-user-namespace -l zsh"
#
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

#==============================
# 一般的な設定
#==============================
#utf setting
# set-window-option -g utf8 on
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

#マウススクロール反映
set-window-option -g mouse on
# set-window-option -g mouse-select-pane on
# set-window-option -g mouse-select-window on
# set-window-option -g mouse-resize-pane on

# set -s escape-time 0
set -g escape-time 0

set-option -g history-limit 50000

set-environment -g NCURSES_NO_UTF8_ACS 0

# タイムアウトしない
set -s escape-time 0
#==============================
# 色のカスタマイズ
#==============================

# 256色ターミナル
# set-option -g default-terminal "screen-256color"
set-option -g default-terminal "xterm-256color"

# ステータスバー
set -g status-interval 2
set -g status-style bg=black,fg=yellow,default

# 左部:whoami@hostname
set -g status-left '#(tmux-status-line-util command_env #{pane_current_command} #{pane_pid})#[fg=cyan][#S:#I-#P]#[default]'
set -g status-left-length 40

# 右部:[2011/03/06(Sun)20:21]
set -g status-right-length 200
# https://github.com/petitviolet/shell_commands/blob/master/tmux-status-line-util.sh
set -g status-right '#[fg=colour201] #{?client_prefix,#[fg=black]#[bg=yellow],} [#(whoami)@#(ipconfig getifaddr en0):#(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g")]#[default][%Y/%m/%d(%a)%H:%M]#[default]'
# set -g status-right "#(tmux-status-line-util #{pane_current_command} #{pane_pid} #{pane_tty} #{pane_current_path})"
set -g message-style bold,fg=white,bg=red
set-option -g status-position top

# pane style
# set -g pane-border-style fg=black,bg=black
# set -g pane-active-border-style fg=cyan,bg=black
set-option -g pane-border-status off
# set-option -g pane-border-format "#P #(tmux-pane-border #{pane_current_command} #{pane_pid})"
# set-option -g pane-border-format "#(tmux-pane-border #{pane_current_command} #{pane_pid} #{pane_tty} #{pane_current_path})"
# set-option -g pane-border-format '#(sleep 0.25; ps -t #{pane_tty} -o args= | tail -n 1)'

# for i in {0..255}; do printf "\x1b[38;5;${i}mcolour%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done
# set-window-option -g mode-style bg=colour142,fg=colour0
set-window-option -g mode-style bg=colour142,fg=colour1
set-window-option -g window-status-current-style bg=blue,fg=white,bold
set-window-option -g allow-rename off
set-window-option -g window-status-current-format "#[fg=colour255] #I: #W#F #[default]"

# active and inactive window background colors
set -g window-style 'fg=colour247,bg=colour234'
set -g window-active-style 'fg=colour253,bg=colour8'
# set -g pane-border-bg colour238
# set -g pane-border-fg colour67
# set -g pane-active-border-bg colour250
# set -g pane-active-border-fg colour51
# set -g window-active-style '#(tmux-status-line-util color #{pane_current_command} #{pane_pid})'
# set -g window-style '#(tmux-status-line-util color #{pane_current_command} #{pane_pid})'

# 異なるサイズの端末からアクセスした時にリサイズ
# setw -g aggressive-resize on
# set -ga terminal-overrides ',xterm*:smglr=\E7\E[?69h\E[%i%p1%d;%p2%ds\E8:mgc=\E7\E[?69l\E8'

#==============================
# キーバインド
#==============================

# Set the prefix to ^j.
unbind C-b
unbind C-j
set -g prefix ^j
bind t send-prefix

# detach
unbind ^D
bind ^D detach

# 起動中のtmuxをリスト表示
unbind *
bind * list-clients

# quit \
unbind \
bind \ confirm-before "kill-server"

# synchronized input
bind s set-window-option synchronize-panes

#==============================
# window
#==============================
# new window
unbind ^C
bind ^C new-window -n zsh
bind c new-window -n zsh

# 次のwindowへ移動
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# windowのタイトル編集
unbind A
bind A command-prompt "rename-window %%"

# " windowlist -b
unbind '"'
bind '"' choose-window

# kill window
unbind k
bind k confirm-before "kill-window"

# さっきいたwindowへ戻る
unbind ^A
bind ^A last-window

# 前のwindowに移動
unbind BSpace
bind BSpace previous-window

# windowのlist表示
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# 新しいwindowのpath設定
bind c new-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

#==============================
# pane
#==============================

# redisplay ^R r
unbind r
unbind R
bind R refresh-client
# 設定ファイル読み込み
bind r source-file ~/.tmux.conf \; display-message "Reload Config"

# 縦分割
unbind |
bind | split-window

# 画面分割を等分にする

# unbind v
bind v select-layout even-horizontal
# unbind h
bind h select-layout even-vertical

# paneの移動
unbind Tab
bind Tab select-pane -t :.-
unbind BTab
bind BTab select-pane -t :.+
bind ^j select-pane -D #down
bind ^k select-pane -U #up
bind ^h select-pane -L #left
bind ^l select-pane -R #right

# unbind ^H
# bind ^H select-pane -t :.-
# unbind ^h
# bind ^h select-pane -t :.-
# unbind ^L
# bind ^L select-pane -t :.+
# unbind l
# bind l select-pane -t :.+


